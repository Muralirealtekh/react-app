name: Build and Push React App to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build React application
      run: npm run build

    - name: Extract current version
      id: extract_version
      run: |
        # Fetch tags to ensure we have them locally
        git fetch --tags
        
        # Get the latest tag
        latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "")
        
        if [ -z "$latest_tag" ]; then
          new_version="v1.0.0"
        else
          current_version=${latest_tag#v}
          echo "Current version: $current_version"
          IFS='.' read -r major minor patch <<< "$current_version"

          # Determine the type of change
          commits=$(git log --oneline $(git describe --tags --abbrev=0) 2>/dev/null || echo "")
          if echo "$commits" | grep -q "BREAKING CHANGE:"; then
            major=$((major + 1))
            minor=0
            patch=0
          elif echo "$commits" | grep -q "feat:"; then
            minor=$((minor + 1))
            patch=0
          elif echo "$commits" | grep -q "fix:"; then
            patch=$((patch + 1))
          else
            patch=$((patch + 1))
          fi

          new_version="v$major.$minor.$patch"
        fi
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/testpush:${{ env.new_version }} .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/testpush:${{ env.new_version }}


    - name: Create new git tag
      run: |
        git config --global user.name "murail"
        git config --global user.email "murali.realtekh@gmail.com"
        git tag ${{ env.new_version }}
        git push origin ${{ env.new_version }}

    - name: Commit version bump
      run: |
        git config --global user.name "murali"
        git config --global user.email "murali.realtekh@gmail.com"
        git add .
        git commit -m "chore: bump version to ${{ env.new_version }}"
        git push origin main
